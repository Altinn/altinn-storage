name: Code test and analysis
on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'test/Altinn.Platform.Storage.Interface.Tests/**'
      - 'test/UnitTest/**'
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]
    paths:
      - '.github/workflows/build-and-analyze.yml'
      - 'src/**'
      - 'test/Altinn.Platform.Storage.Interface.Tests/**'
      - 'test/UnitTest/**'
  workflow_dispatch:
jobs:
  build-test-analyze:
    name: Build, test & analyze
    if: (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork == false))
    runs-on: ubuntu-latest
    services:
     postgres:
       image: postgres:16@sha256:301bcb60b8a3ee4ab7e147932723e3abd1cef53516ce5210b39fd9fe5e3602ae
       env:
         PGHOST: localhost
         POSTGRES_USER: platform_storage_admin
         POSTGRES_PASSWORD: Password
         POSTGRES_DB: storagedb
       options: >-
         --health-cmd pg_isready
         --health-interval 10s
         --health-timeout 5s
         --health-retries 5
       ports:
         - 5432:5432
    steps:
      - name: Setup .NET
        uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4.3.1
        with:
          dotnet-version: |
            9.0.x
      - name: Set up Java
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          distribution: 'temurin'
          java-version: 17
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Setup PostgreSQL
        run: |
            chmod +x dbsetup.sh
            ./dbsetup.sh
      - name: Restart database to enable config changes
        run: |
          docker restart $(docker ps -q)
      - name: Install SonarCloud scanners
        run: |
          dotnet tool install --global dotnet-sonarscanner
      - name: Build & Test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet-sonarscanner begin /k:"Altinn_altinn-storage" /o:"altinn" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vstest.reportsPaths="**/*.trx" /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml" /d:sonar.exclusions="src/Storage/Migration/**/*"

          dotnet build Altinn.Platform.Storage.sln -v q

          dotnet test Altinn.Platform.Storage.sln \
          -v q \
          --collect:"XPlat Code Coverage" /p:Exclude="**/Program.cs" \
          --results-directory TestResults/ \
          --logger "trx;" \
          --configuration release \
          -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
      - name: Complete sonar analysis
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"    
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: TestResults
          path: '**/TestResults/*.trx'
      - name: Process .NET test result
        if: always()
        uses: NasAmin/trx-parser@d34de965cdf3c5efc1e986bd13b7914e29fed7df # v0.6.0
        with:
          TRX_PATH: ${{ github.workspace }}/TestResults
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
