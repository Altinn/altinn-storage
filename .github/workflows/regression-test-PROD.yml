name: Regression test - PROD

on:
  workflow_dispatch:
  schedule:
  - cron: '0 12 * * 1-5'

jobs:
  regression-tests:
    environment: PROD
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Run regression tests for endpoint 'applications'
      uses: grafana/k6-action@v0.3.1
      with:
        filename: test/k6/src/tests/applications.js
        flags: -e runFullTestSet=true -e env=${{ vars.ENV }} -e org=${{ vars.ORG }} -e app=${{ vars.APP }}
    - name: Run regression tests for endpoint 'instances'
      if: always()
      uses: grafana/k6-action@v0.3.1
      with:
        filename: test/k6/src/tests/instances.js
        flags: -e runFullTestSet=true -e env=${{ vars.ENV }} -e pid=${{ secrets.REGRESSION_PERSON_NUMBER }} -e orgNumber=${{ secrets.ORG_NUMBER }} -e orgPartyId=${{ secrets.ORG_PARTY_ID }} -e org=${{ vars.ORG }} -e app=${{ vars.APP }} -e userName=${{ secrets.REGRESSION_USER_NAME}} -e userPassword=${{ secrets.REGRESSION_USER_PASSWORD}} -e apimSubsKey=${{ secrets.APIM_SUBSKEY }} -e mpClientId=${{ secrets.MP_CLIENT_ID }} -e mpKid=${{ secrets.MP_KID }} -e encodedJwk=${{ secrets.MP_ENCODEDJWK }}

    - name: Run regression tests for endpoint 'instances/sbl'
      if: always()
      uses: grafana/k6-action@v0.3.1
      with:
        filename: test/k6/src/tests/messageboxinstances.js
        flags: -e runFullTestSet=true -e env=${{ vars.ENV }} -e org=${{ vars.ORG }} -e app=${{ vars.APP }} -e userName=${{ secrets.REGRESSION_USER_NAME}} -e userPassword=${{ secrets.REGRESSION_USER_PASSWORD}} -e apimSubsKey=${{ secrets.APIM_SUBSKEY }} -e apimSblSubsKey=${{ secrets.APIM_SBL_SUBSKEY }}
    - name: Run regression tests for endpoint 'data'
      if: always()
      uses: grafana/k6-action@v0.3.1
      with:
        filename: test/k6/src/tests/data.js
        flags: -e runFullTestSet=true -e env=${{ vars.ENV }} -e org=${{ vars.ORG }} -e app=${{ vars.APP }} -e userName=${{ secrets.REGRESSION_USER_NAME}} -e userPassword=${{ secrets.REGRESSION_USER_PASSWORD}} -e apimSubsKey=${{ secrets.APIM_SUBSKEY }} -e runFullTestSet=true
    - name: Run regression tests for endpoint 'process'
      if: always()
      uses: grafana/k6-action@v0.3.1
      with:
        filename: test/k6/src/tests/process.js
        flags: -e runFullTestSet=true -e env=${{ vars.ENV }} -e org=${{ vars.ORG }} -e app=${{ vars.APP }} -e userName=${{ secrets.REGRESSION_USER_NAME}} -e userPassword=${{ secrets.REGRESSION_USER_PASSWORD}} -e apimSubsKey=${{ secrets.APIM_SUBSKEY }} -e runFullTestSet=true
    - name: Run regression tests for endpoint 'sign'
      if: always()
      uses: grafana/k6-action@v0.3.1
      with:
        filename: test/k6/src/tests/sign.js
        flags: -e runFullTestSet=true -e env=${{ vars.ENV }} -e userName=${{ secrets.REGRESSION_USER_NAME}} -e userPassword=${{ secrets.REGRESSION_USER_PASSWORD}} -e org=${{ vars.ORG }} -e app=${{ vars.APP }} -e apimSubsKey=${{ secrets.APIM_SUBSKEY }} -e runFullTestSet=true
    - name: Run regression tests for endpoint 'texts'
      if: always()
      uses: grafana/k6-action@v0.3.1
      with:
        filename: test/k6/src/tests/texts.js
        flags: -e runFullTestSet=true -e env=${{ vars.ENV }} -e org=${{ vars.ORG }} -e app=${{ vars.APP }} -e apimSubsKey=${{ secrets.APIM_SUBSKEY }} -e mpClientId=${{ secrets.MP_CLIENT_ID }} -e mpKid=${{ secrets.MP_KID }} -e encodedJwk=${{ secrets.MP_ENCODEDJWK }} -e runFullTestSet=true
    - name: Build failure report
      if: failure()
      run: |

          report=":warning: Storage regression test failure in production :warning: \n"
          report+="\n Workflow available here: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          echo "stepreport="$report >> $GITHUB_ENV
    - name: Report failure to Slack
      if: failure()
      id: slack
      uses: slackapi/slack-github-action@v2.0.0
      with:
        payload: |
            {
              "text": "${{ env.stepreport }}"
            }
      env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_PROD }}

